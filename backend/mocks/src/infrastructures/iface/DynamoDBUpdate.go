// Code generated by mockery. DO NOT EDIT.

package mocks

import (
	iface "github.com/koki-develop/lgtm-generator/backend/src/infrastructures/iface"
	mock "github.com/stretchr/testify/mock"
)

// DynamoDBUpdate is an autogenerated mock type for the DynamoDBUpdate type
type DynamoDBUpdate struct {
	mock.Mock
}

// Range provides a mock function with given fields: name, value
func (_m *DynamoDBUpdate) Range(name string, value interface{}) iface.DynamoDBUpdate {
	ret := _m.Called(name, value)

	var r0 iface.DynamoDBUpdate
	if rf, ok := ret.Get(0).(func(string, interface{}) iface.DynamoDBUpdate); ok {
		r0 = rf(name, value)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(iface.DynamoDBUpdate)
		}
	}

	return r0
}

// Run provides a mock function with given fields:
func (_m *DynamoDBUpdate) Run() error {
	ret := _m.Called()

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Set provides a mock function with given fields: path, value
func (_m *DynamoDBUpdate) Set(path string, value interface{}) iface.DynamoDBUpdate {
	ret := _m.Called(path, value)

	var r0 iface.DynamoDBUpdate
	if rf, ok := ret.Get(0).(func(string, interface{}) iface.DynamoDBUpdate); ok {
		r0 = rf(path, value)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(iface.DynamoDBUpdate)
		}
	}

	return r0
}
